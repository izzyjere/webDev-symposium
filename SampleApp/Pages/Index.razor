@page "/" 
<PageTitle>Incidents - Home</PageTitle>
<h3>Incidents </h3><hr>

	 <EditForm Model="Model" OnValidSubmit="@Process">
		<DataAnnotationsValidator/>
		<div class="inline-content">
      	    <div class="col-md-4">
                <label for="officer">Officer</label>
                <InputSelect TValue= "int" id="officer" @bind-Value="@Model.InvestigatingOfficerId" class="form-control">
                    @foreach (var officer in officers)
                    {
                        <option value="@officer.Id">@officer.FirstName @officer.LastName</option>
                    }
                </InputSelect>
            </div>
            <div class="col-md-4">
               <label for="date">Date</label>
               <InputDate id="date" @bind-Value="@Model.IncidentDate" class="form-control"></InputDate>
            </div>
            <div class="col-md-4">
                <label for="status">Status</label>
                <InputSelect TValue="string" id="status" @bind-Value="@Model.Status" class="form-control">
                        <option value="Open">Open</option>
			            <option value="Closed">Closed</option>                    
                </InputSelect>
            </div>
            <div class="col-md-4">
                <label for="category">Category</label>
                <InputText id="category" @bind-Value="@Model.IncidentCategory" class="form-control"/>             
            </div>
            <div class="col-md-4 ">
                <label for="loco">Location</label>
                <InputText id="loco" @bind-Value="@Model.IncidentLocation" class="form-control"/>
            </div>
            <div class="col-md-4">
               <label for="findings">Findings</label>
               <InputText id="findings" @bind-Value="@Model.InvestigationFindings" class="form-control"/>
            </div>
	       <div class="col-md-4"><label for="reso">Resolution</label>
               <InputText id="reso" @bind-Value="@Model.Resolution" class="form-control"/>
           </div>
	      <div class="col-md-4">
                <label for="datec">Date Closed</label>
                <InputDate id="datec" @bind-Value="@Model.DateClosed" class="form-control"></InputDate>
          </div>
	</div> 
    <div  class="col-lg-4 pt-4">
        <button type="submit" class="btn btn-success"><i class="oi oi-file"></i>@buttonText</button>
    </div>
    <hr/>
 </EditForm>
 

<table class="table table-striped table-bordered table-hover mt-4">
    <caption>List of Incidents</caption>
<thead>
	<tr>
		<th>Date</th>		
		<th>Category</th>
		<th>Status</th>
		<th>Incident Location</th>
		<th>Investigation Findings</th>
		<th>Resolution</th>
		<th>DateClosed</th>
		<th>Investigating Officer</th>
		<th>Actions</th>
	</tr>
</thead>
<tbody>
   @foreach (var item in tableData)
   {
       <tr>
	    <td>@item.IncidentDate.ToString("dd MMMM yyyy")</td>
	    <td>@item.IncidentCategory</td>
	    <td>@item.Status</td>
	    <td>@item.IncidentLocation</td>
	    <td>@item.InvestigationFindings</td>
	    <td>@item.Resolution</td>
	    <td>@item.DateClosed.ToString("dd MMMM yyyy")</td>
	    <td>@item.InvestigatingOfficer.FirstName @item.InvestigatingOfficer.LastName</td>
	    <td>
		    <button @onclick="()=>ToggleEdit(item)" class="btn btn-warning btn-sm"><i class="oi oi-pencil"></i></button>
		    <button @onclick="()=>ToggleDelete(item)" class="btn btn-danger btn-sm"><i class="oi oi-trash"></i></button>
	    </td>
	    
       </tr>
   }
</tbody>
</table>
<style>
	
    .inline-content {
        display: flex;
        justify-content: space-between;
    }
    .col-md-4 {
        padding: 0 1em 0 0;
        width: 150px;
    }
</style>
@code {
   
   List<Incident> tableData { get; set; } = new ();
   List<InvestigatingOfficer> officers { get; set; } = new();
   Incident Model { get; set; } = new ();
   string buttonText;
   protected override void OnInitialized()
   {
		LoadData();
   }	
   void Process()
   {
        if(Model.Id == 0)
        {
            if(incidentService.Add(Model))
            {
                LoadData();
            }
            
        }
        else
        {
            if(incidentService.Update(Model))
            {
                LoadData();
            }    
        }
   }
   void LoadData()
   {   
       Model = new();
       buttonText = " Save";
       tableData = incidentService.GetAll();
       officers = investigatingOfficerService.GetAll();
       StateHasChanged();
   }
   void ToggleEdit(Incident record)
   {
       Model = record;
       buttonText = " Update";
   }
   async void ToggleDelete(Incident record)
   {  
      
      if(incidentService.Delete(record))
      {   
          LoadData(); 
          await javaScript.InvokeVoidAsync("alert","The record has been deleted successfully");
      }

   }
   
   
}
